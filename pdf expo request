   public function historyindex(Request $request)
    {
        $data['data'] = MainWeightTable::orderBy('id', 'DESC')->get();

        if ($request->filled('export_type')) {
            $filename = 'historyIndex' . '-' . fdate(date('Y-m-d'), 'Y_m_d');

            $pdf = PDF::loadview('Weight.sale-pdf', $data, [], [
                'margin_header'         => 10,
                'margin_footer'         => 5,
                'mode'                  => 'utf-8',
                'format'                => 'A4-L',
                'orientation'           => 'L'
            ]);

            $pdf->getMpdf()->setFooter("{PAGENO} / {nb}");

            return $pdf->stream($filename . '.pdf');
        }

        // Pass $data to the view
        return view('Weight.historyIndex', $data);
    }





   <a href="{{ route('dokani.historyindex') }}?export_type=pdf&{{ http_build_query(request()->except('export_type', '_token')) }}"
                                            title="Pdf" target="_blank">
                                             <img src="{{ asset('assets/images/export-icons/pdf-icon.png') }}" alt="">
                                         </a>



=============================>
   if (request()->filled('export_type')) {

            $filename = 'Doctor_Appointment_' . fdate(request('from_date'), 'Y_m_d');
              $data['appointments']=$appointments->get();
            return $this->exportData($data, 'outdoors/appointment/export/', $filename);
        }


 public function exportData($data, $file_path, $filename)
    {
        set_time_limit(0);

        if (request('export_type') == 'export_pdf') {

            ini_set("pcre.backtrack_limit", "50000000");


            $pdf = PDF::loadview($file_path . request('export_type'), $data, [], [
                // 'format' => 'Legal-L',
                'margin_header' => 10,
                'margin_footer' => 5,
                'mode' => 'utf-8',
                'format' => 'A4-L',
                'orientation' => 'L'
            ]);

            $pdf->getMpdf()->setFooter("{PAGENO} / {nb}");

            return $pdf->stream($filename . '.pdf');
        }


        if (request('export_type') == 'export_excel') {

            $data['file_path'] = $file_path;

            return Excel::download(new ReportExportService($data), $filename . '.xlsx');
        }
    }




    <div class="pull-left" style="margin-top:10px; margin-left:10px">
                                            <a href="{{ url()->current() }}?export_type=export_excel&{{ request()->getQueryString() }}"
                                                target="_blank" style="margin-right: 5px">
                                                <img src="{{ asset('assets/images/export-icons/excel-icon.png') }}">
                                            </a>
                                            <a href="{{ url()->current() }}?export_type=export_pdf&{{ request()->getQueryString() }}"
                                                target="_blank" style="margin-right: 5px">
                                                <img src="{{ asset('assets/images/export-icons/pdf-icon.png') }}">
                                            </a>
                                        </div>



=====================================>

    <style>
       
        .dt-buttons {
            float: right;
            margin-right: 10px;
        }
        .dataTables_filter {
            float: left;
        }
    </style>


 <table id="data-table" class="table table-striped table-bordered nowrap" width="100%">


 <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.flash.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.print.min.js"></script>

    <script>
       


        $(document).ready(function() {
            $('#data-table').DataTable({
                dom: '<"top"lfB>rt<"bottom"ip><"clear">',
                buttons: [{
                    extend: 'csv',
                    className: 'btn btn-success btn-sm mb-1',
                    title: 'Product List',
                    exportOptions: {
                        columns: ':not(:last-child)'
                    }
                },
                    {
                        extend: 'excel',
                        className: 'btn btn-info btn-sm mb-1',
                        title: 'Product List',
                        exportOptions: {
                            columns: ':not(:last-child)'
                        }
                    },
                    {
                        extend: 'pdf',
                        className: 'btn btn-danger btn-sm mb-1',
                        title: 'Product List',
                        exportOptions: {
                            columns: ':not(:last-child)'
                        },
                        customize: function(doc) {
                            doc.content.splice(0, 1, {
                                text: 'Product List',
                                fontSize: 14,
                                bold: true,
                                margin: [0, 0, 0, 12]
                            });

                            // Adjust table width
                            doc.styles.tableBodyEven.alignment = 'center';
                            doc.styles.tableBodyOdd.alignment = 'center';
                            doc.styles.tableHeader.alignment = 'center';

                            var objLayout = {};
                            objLayout['hLineWidth'] = function(i) {
                                return 0.5;
                            };
                            objLayout['vLineWidth'] = function(i) {
                                return 0.5;
                            };
                            objLayout['hLineColor'] = function(i) {
                                return '#aaa';
                            };
                            objLayout['vLineColor'] = function(i) {
                                return '#aaa';
                            };
                            objLayout['paddingLeft'] = function(i) {
                                return 12;
                            };
                            objLayout['paddingRight'] = function(i) {
                                return 4;
                            };
                            objLayout['paddingTop'] = function(i) {
                                return 4;
                            };
                            objLayout['paddingBottom'] = function(i) {
                                return 4;
                            };
                            objLayout['fillColor'] = function(i) {
                                return (i % 2 === 0) ? '#F3F3F3' : null;
                            };
                            doc.content[1].layout = objLayout;
                        }
                    },
                ],

                searching: true,
                pageLength: 25,
                ordering: true,
                bPaginate: true,
                lengthChange: false,
                info: true,
            });

            $(".dt-buttons").addClass("pull-right");
        });
    </script>

